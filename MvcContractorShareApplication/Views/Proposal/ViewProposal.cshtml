@model MvcContractorShareApplication.Models.ViewProposalModel
@{
    ViewBag.Title = "ViewProposal";
}

    @Html.Partial("_NavBar")

@section featured {

<div class="jumbotron jumbotron-special-short">
        <div class="container" >
            <h2  id="testolga" style="font-family:Calibri; font-size:24px; font-weight:bold">View Proposal</h2>
    </div>
    }

<hr>
<div class="container">
	<div class="row">
  		<div class="col-sm-10"><h4>Proposal for @Html.DisplayFor(model => model.JobName)</h4></div>
        <br />
        <p>
            <div class="btn-group">
                
                @* If usertype is 1 (Client), he can Accept/Reject/Reply
                   If usertype is 2 (Contractor), he can Reject/Edit/Reply *@

                @if (Convert.ToInt32(Session["usertype"]) == 1)
                {
                    <div class="btn-group">
								        <button class="btn btn-sm btn-primary">Action</button>
								        <button class="btn btn-sm dropdown-toggle btn-primary" data-toggle="dropdown"><span class="caret"></span></button>
								        <ul class="dropdown-menu">

                                            @* If acceptetd/Rejected/Cancelled it can't be Accepted, Replied or Rejected *@
                                            @if (Model.StatusName == "Open" || Model.StatusName == "Pending")
                                            {
                                                <li><a href='@Url.Action("AcceptProposal", "Proposal", new { id = Model.ProposalId })'><i class="fa fa-thumbs-o-up"></i> Accept</a></li>

                                                <li><a href='@Url.Action("RejectProposal", "Proposal", new { id = Model.ProposalId })'><i class="fa fa-thumbs-o-down"></i> Reject</a></li>

                                            }
                                            @if ((Session["userId"]).ToString() == Model.FromUserId.ToString() && (Model.StatusName == "Open" || Model.StatusName == "Pending"))
                                            {
                                                <li><a href='@Url.Action("CancelProposal", "Proposal", new { id = Model.ProposalId })'><i class="fa fa-close"></i> Cancel</a></li>                                
                                
                                            }

                                            <li><a href='@Url.Action("DetailsJob", "Home", new { id = Model.JobId })'><i class="fa fa-folder-open-o"></i> View Job</a></li>                                
                                
                                    
                                        </ul>
			        </div>
                }
                else
                {
                    <div class="btn-group">
								        <button class="btn btn-sm btn-primary">Action</button>
								        <button class="btn btn-sm dropdown-toggle btn-primary" data-toggle="dropdown"><span class="caret"></span></button>
								        <ul class="dropdown-menu">
                                                                                
                                            @* If accepted, it can't be Edited, Replied or Rejected *@
                                            @if (Model.StatusName == "Open" || Model.StatusName == "Pending")
                                            {
                                                <li><a href='@Url.Action("EditProposal", "Proposal", new { id = Model.ProposalId })'><i class="fa fa-edit"></i> Edit</a></li>

                                                <li><a href='@Url.Action("RejectProposal", "Proposal", new { id = Model.ProposalId })'><i class="fa fa-thumbs-o-down"></i> Reject</a></li>
                                            }

                                            @if ((Session["userId"]).ToString() == Model.FromUserId.ToString() && (Model.StatusName == "Open" || Model.StatusName == "Pending"))
                                            {
                                                <li><a href='@Url.Action("CancelProposal", "Proposal", new { id = Model.ProposalId })'><i class="fa fa-close"></i> Cancel</a></li>                                
                                
                                            }

                                            <li><a href='@Url.Action("DetailsJob", "Home", new { id = Model.JobId })'><i class="fa fa-folder-open-o"></i> View Job</a></li>                                
                                        </ul>
			        </div>
                }

			    </div>
        </p>
    </div>
    <div class="row">
  		<div class="col-sm-3"><!--left col-->
              
          <ul class="list-group">
            <li class="list-group-item text-right"><span class="pull-left"><strong>Status</strong></span> @Html.DisplayFor(model => model.StatusName)</li>
            <li class="list-group-item text-right"><span class="pull-left"><strong>Created By</strong></span> @Html.DisplayFor(model => model.FromUserName)</li>
            <li class="list-group-item text-right"><span class="pull-left"><strong>To </strong></span> @Html.DisplayFor(model => model.ToUserName)</li>
            <li class="list-group-item text-right"><span class="pull-left"><strong>Created</strong></span>@Html.DisplayFor(model => model.Created)</li>

            <li class="list-group-item text-right"><span class="pull-left"><strong>Location</strong></span> 
                @Html.DisplayFor(model => model.Address) <br />
                @Html.DisplayFor(model => model.City) <br />
            </li>
          </ul> 
               
          
          
          
        </div><!--/col-3-->
    	<div class="col-sm-9">
          
          <ul class="nav nav-tabs" id="myTab">
            <li><a href="#home" data-toggle="tab">Proposal</a></li>
            <li><a href="#messages" data-toggle="tab">Messages</a></li>
          </ul>
              
          <div class="tab-content">          
                <div class="tab-pane" id="home">
                <hr>
                <div class="row">
                     <div class="col-sm-10">@Html.DisplayFor(model => model.OriginalMessage.message)</div>
                     <br />

                     <div class="col-sm-10">
                        <br />
                     </div>

                      <div class="col-sm-10"><strong>Approx Duration: </strong>@Html.DisplayFor(model => model.AproxDuration)</div>
                      <div class="col-sm-10"><strong>Proposed Time: </strong>@Html.DisplayFor(model => model.ProposedTime)</div>
                      <div class="col-sm-10"><strong>Proposed Price: </strong>@Html.DisplayFor(model => model.ProposedPrice)</div>


                  	<ul class="pagination" id="myPager"></ul>
              </div><!--/table-resp-->
                   

              <hr>
              
             </div><!--/tab-pane-->
             <div class="tab-pane" id="messages">
                <ul class="list-group">  
                    <div class="well">
                        @using (Html.BeginForm())
                        {
                        @Html.AntiForgeryToken()

                            <form role="form">
                            <fieldset>

                            <div class="form-group">

                                     <!--  Hidden fields -->
                                    @Html.HiddenFor(m => m.ProposalId, new { @class = "form-control" })
                                    @Html.HiddenFor(m => m.MessageToUserId, new { @class = "form-control" })
                                    <!-- End Hidden fields -->
                                    
                                    @Html.TextAreaFor(m => m.Message, new { @class = "form-control", id = "smallmessage" })
                                    @Html.ValidationMessageFor(m => m.Message, String.Empty, new { @class = "help-inline", @style = "color:red" })
                                    
                                    <div class="row">
                                        <div class="col-sm-10">
                                        </div>
                                        <div class="col-sm-2">
                                            <input type="submit" value="Send Message" class="btn btn-primary btn-block btn-xs" tabindex="7">                     
                                        </div>
                                    </div>
                            </div>  
                            </fieldset>
		                    </form>
                        }

                        <hr data-brackets-id="12673">
                        <ul data-brackets-id="12674" id="sortable" class="list-unstyled ui-sortable">
                        
                           @foreach (var item in Model.Messages)
                           {
                               <strong class="pull-left primary-font">@Html.DisplayFor(model => item.FromUserName) to @Html.DisplayFor(model => item.ToUserName)</strong>
                                                              
                               <small class="pull-right text-muted">
                                    <span class="glyphicon glyphicon-time"></span> @Html.DisplayFor(model => item.Sent)    
                                
                                     @if ((Session["userId"]).ToString() == item.FromUserId.ToString())
                                     {              
                                        <a role="button" class="close" aria-hidden="true" data-toggle="modal" data-target="#@item.messageId">&times;</a>
                                     }
                               </small>
                               
                                <!-- Modal HTML -->
                               <div class="modal fade" id="@item.messageId" tabindex="-1" role="dialog"  aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                                <h3 class="modal-title">Confirmation</h3>
                                            </div>
                                            <div class="modal-body">
                                                <p>Are you sure you want to delete this message?</p>
                                            </div>
                                            <div class="modal-footer">


                                                     <!--  Hidden fields -->
                                                    @Html.HiddenFor(m => m.JobId, new { @class = "form-control" })

                                                   <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                                
                                                    @Html.ActionLink(
                                                        "Delete",
                                                        "DeleteMessage",
                                                        "Proposal",
                                                        new { id = item.messageId, proposalid = item.ProposalId },
                                                        new { @class = "btn btn-primary" })

                                            </div>
                                        </div>
                                    </div>
                                </div>
                               
                                <br />
                                <li class="ui-state-default">>@Html.DisplayFor(model => item.message)</li>
                                <br />
                           }

                           <strong class="pull-left primary-font">@Html.DisplayFor(model => model.OriginalMessage.FromUserName) to @Html.DisplayFor(model => model.OriginalMessage.ToUserName)</strong>
                                                              
                               <small class="pull-right text-muted">
                                    <span class="glyphicon glyphicon-time"></span> @Html.DisplayFor(model => model.OriginalMessage.Sent)    
                                </small>
                                <br />
                                <li class="ui-state-default">>@Html.DisplayFor(model => model.OriginalMessage.message)</li>

                        </ul>
                </div>

               </ul> 



             </div><!--/tab-pane-->
             
              </div><!--/tab-pane-->
          </div><!--/tab-content-->

        </div><!--/col-9-->
    </div><!--/row-->



    </div>


@{
    string activeTab = ViewBag.Active.ToString(); 
}

@section scripts{
 
    <script>
        $(function () {
            var selector = '@activeTab';
            $("#" + selector).addClass("active");
        });
    </script>
}