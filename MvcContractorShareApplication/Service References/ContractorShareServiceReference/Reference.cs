//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcContractorShareApplication.ContractorShareServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class LoginInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EmailField;
        
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationResult", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class AuthenticationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int UserIdField;
        
        private int UserTypeField;
        
        private string errorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string error {
            get {
                return this.errorField;
            }
            set {
                if ((object.ReferenceEquals(this.errorField, value) != true)) {
                    this.errorField = value;
                    this.RaisePropertyChanged("error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class RegisterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EmailField;
        
        private string PasswordField;
        
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResetPasswordInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class ResetPasswordInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResetPasswordResult", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class ResetPasswordResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EmailField;
        
        private string ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePasswordInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class ChangePasswordInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NewPasswordField;
        
        private string OldPasswordField;
        
        private string emailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePreferencesInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class ChangePreferencesInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool shareLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool showContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool showContactNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableNotifications {
            get {
                return this.enableNotificationsField;
            }
            set {
                if ((this.enableNotificationsField.Equals(value) != true)) {
                    this.enableNotificationsField = value;
                    this.RaisePropertyChanged("enableNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool shareLocation {
            get {
                return this.shareLocationField;
            }
            set {
                if ((this.shareLocationField.Equals(value) != true)) {
                    this.shareLocationField = value;
                    this.RaisePropertyChanged("shareLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool showContactEmail {
            get {
                return this.showContactEmailField;
            }
            set {
                if ((this.showContactEmailField.Equals(value) != true)) {
                    this.showContactEmailField = value;
                    this.RaisePropertyChanged("showContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool showContactNumber {
            get {
                return this.showContactNumberField;
            }
            set {
                if ((this.showContactNumberField.Equals(value) != true)) {
                    this.showContactNumberField = value;
                    this.RaisePropertyChanged("showContactNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PreferencesResult", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class PreferencesResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> enableNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> shareLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> showContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> showContactNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> enableNotifications {
            get {
                return this.enableNotificationsField;
            }
            set {
                if ((this.enableNotificationsField.Equals(value) != true)) {
                    this.enableNotificationsField = value;
                    this.RaisePropertyChanged("enableNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> shareLocation {
            get {
                return this.shareLocationField;
            }
            set {
                if ((this.shareLocationField.Equals(value) != true)) {
                    this.shareLocationField = value;
                    this.RaisePropertyChanged("shareLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> showContactEmail {
            get {
                return this.showContactEmailField;
            }
            set {
                if ((this.showContactEmailField.Equals(value) != true)) {
                    this.showContactEmailField = value;
                    this.RaisePropertyChanged("showContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> showContactNumber {
            get {
                return this.showContactNumberField;
            }
            set {
                if ((this.showContactNumberField.Equals(value) != true)) {
                    this.showContactNumberField = value;
                    this.RaisePropertyChanged("showContactNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractorInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class ContractorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AverageRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompanyCoordXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompanyCoordYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfRatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PricePerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string websiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AverageRate {
            get {
                return this.AverageRateField;
            }
            set {
                if ((this.AverageRateField.Equals(value) != true)) {
                    this.AverageRateField = value;
                    this.RaisePropertyChanged("AverageRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompanyCoordX {
            get {
                return this.CompanyCoordXField;
            }
            set {
                if ((this.CompanyCoordXField.Equals(value) != true)) {
                    this.CompanyCoordXField = value;
                    this.RaisePropertyChanged("CompanyCoordX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompanyCoordY {
            get {
                return this.CompanyCoordYField;
            }
            set {
                if ((this.CompanyCoordYField.Equals(value) != true)) {
                    this.CompanyCoordYField = value;
                    this.RaisePropertyChanged("CompanyCoordY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((this.MobileNumberField.Equals(value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfRates {
            get {
                return this.NumberOfRatesField;
            }
            set {
                if ((this.NumberOfRatesField.Equals(value) != true)) {
                    this.NumberOfRatesField = value;
                    this.RaisePropertyChanged("NumberOfRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PricePerHour {
            get {
                return this.PricePerHourField;
            }
            set {
                if ((this.PricePerHourField.Equals(value) != true)) {
                    this.PricePerHourField = value;
                    this.RaisePropertyChanged("PricePerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string website {
            get {
                return this.websiteField;
            }
            set {
                if ((object.ReferenceEquals(this.websiteField, value) != true)) {
                    this.websiteField = value;
                    this.RaisePropertyChanged("website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> AverageRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompanyCoordXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompanyCoordYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumOfRatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PricePerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string websiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> AverageRate {
            get {
                return this.AverageRateField;
            }
            set {
                if ((this.AverageRateField.Equals(value) != true)) {
                    this.AverageRateField = value;
                    this.RaisePropertyChanged("AverageRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompanyCoordX {
            get {
                return this.CompanyCoordXField;
            }
            set {
                if ((this.CompanyCoordXField.Equals(value) != true)) {
                    this.CompanyCoordXField = value;
                    this.RaisePropertyChanged("CompanyCoordX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompanyCoordY {
            get {
                return this.CompanyCoordYField;
            }
            set {
                if ((this.CompanyCoordYField.Equals(value) != true)) {
                    this.CompanyCoordYField = value;
                    this.RaisePropertyChanged("CompanyCoordY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((this.MobileNumberField.Equals(value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumOfRates {
            get {
                return this.NumOfRatesField;
            }
            set {
                if ((this.NumOfRatesField.Equals(value) != true)) {
                    this.NumOfRatesField = value;
                    this.RaisePropertyChanged("NumOfRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PricePerHour {
            get {
                return this.PricePerHourField;
            }
            set {
                if ((this.PricePerHourField.Equals(value) != true)) {
                    this.PricePerHourField = value;
                    this.RaisePropertyChanged("PricePerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string website {
            get {
                return this.websiteField;
            }
            set {
                if ((object.ReferenceEquals(this.websiteField, value) != true)) {
                    this.websiteField = value;
                    this.RaisePropertyChanged("website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserFavourite", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class UserFavourite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User User1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromUserID {
            get {
                return this.FromUserIDField;
            }
            set {
                if ((this.FromUserIDField.Equals(value) != true)) {
                    this.FromUserIDField = value;
                    this.RaisePropertyChanged("FromUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserID {
            get {
                return this.ToUserIDField;
            }
            set {
                if ((this.ToUserIDField.Equals(value) != true)) {
                    this.ToUserIDField = value;
                    this.RaisePropertyChanged("ToUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] AppointmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] Appointments1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Bug[] BugsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CAverageRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CNumOfRatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CNumServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CTotalRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompanyCoordXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompanyCoordYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Contractor_websiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Message[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Message[] Messages1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Preference[] PreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PricePerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] ProposalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] Proposals1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] Proposals2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Rating[] RatingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Rating[] Ratings1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service[] Services1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Suggestion[] SuggestionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.UserCategory[] UserCategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.UserDenunce[] UserDenuncesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[] UserFavouritesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[] UserFavourites1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] Appointments1 {
            get {
                return this.Appointments1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Appointments1Field, value) != true)) {
                    this.Appointments1Field = value;
                    this.RaisePropertyChanged("Appointments1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Bug[] Bugs {
            get {
                return this.BugsField;
            }
            set {
                if ((object.ReferenceEquals(this.BugsField, value) != true)) {
                    this.BugsField = value;
                    this.RaisePropertyChanged("Bugs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CAverageRate {
            get {
                return this.CAverageRateField;
            }
            set {
                if ((this.CAverageRateField.Equals(value) != true)) {
                    this.CAverageRateField = value;
                    this.RaisePropertyChanged("CAverageRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CNumOfRates {
            get {
                return this.CNumOfRatesField;
            }
            set {
                if ((this.CNumOfRatesField.Equals(value) != true)) {
                    this.CNumOfRatesField = value;
                    this.RaisePropertyChanged("CNumOfRates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CNumServices {
            get {
                return this.CNumServicesField;
            }
            set {
                if ((this.CNumServicesField.Equals(value) != true)) {
                    this.CNumServicesField = value;
                    this.RaisePropertyChanged("CNumServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> CTotalRate {
            get {
                return this.CTotalRateField;
            }
            set {
                if ((this.CTotalRateField.Equals(value) != true)) {
                    this.CTotalRateField = value;
                    this.RaisePropertyChanged("CTotalRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompanyCoordX {
            get {
                return this.CompanyCoordXField;
            }
            set {
                if ((this.CompanyCoordXField.Equals(value) != true)) {
                    this.CompanyCoordXField = value;
                    this.RaisePropertyChanged("CompanyCoordX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompanyCoordY {
            get {
                return this.CompanyCoordYField;
            }
            set {
                if ((this.CompanyCoordYField.Equals(value) != true)) {
                    this.CompanyCoordYField = value;
                    this.RaisePropertyChanged("CompanyCoordY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contractor_website {
            get {
                return this.Contractor_websiteField;
            }
            set {
                if ((object.ReferenceEquals(this.Contractor_websiteField, value) != true)) {
                    this.Contractor_websiteField = value;
                    this.RaisePropertyChanged("Contractor_website");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncPassword {
            get {
                return this.EncPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.EncPasswordField, value) != true)) {
                    this.EncPasswordField = value;
                    this.RaisePropertyChanged("EncPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpDate {
            get {
                return this.ExpDateField;
            }
            set {
                if ((this.ExpDateField.Equals(value) != true)) {
                    this.ExpDateField = value;
                    this.RaisePropertyChanged("ExpDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Message[] Messages1 {
            get {
                return this.Messages1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Messages1Field, value) != true)) {
                    this.Messages1Field = value;
                    this.RaisePropertyChanged("Messages1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((this.MobileNumberField.Equals(value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((this.PhoneNumberField.Equals(value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Preference[] Preferences {
            get {
                return this.PreferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferencesField, value) != true)) {
                    this.PreferencesField = value;
                    this.RaisePropertyChanged("Preferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PricePerHour {
            get {
                return this.PricePerHourField;
            }
            set {
                if ((this.PricePerHourField.Equals(value) != true)) {
                    this.PricePerHourField = value;
                    this.RaisePropertyChanged("PricePerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] Proposals {
            get {
                return this.ProposalsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalsField, value) != true)) {
                    this.ProposalsField = value;
                    this.RaisePropertyChanged("Proposals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] Proposals1 {
            get {
                return this.Proposals1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Proposals1Field, value) != true)) {
                    this.Proposals1Field = value;
                    this.RaisePropertyChanged("Proposals1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] Proposals2 {
            get {
                return this.Proposals2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Proposals2Field, value) != true)) {
                    this.Proposals2Field = value;
                    this.RaisePropertyChanged("Proposals2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Rating[] Ratings {
            get {
                return this.RatingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingsField, value) != true)) {
                    this.RatingsField = value;
                    this.RaisePropertyChanged("Ratings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Rating[] Ratings1 {
            get {
                return this.Ratings1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Ratings1Field, value) != true)) {
                    this.Ratings1Field = value;
                    this.RaisePropertyChanged("Ratings1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service[] Services1 {
            get {
                return this.Services1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Services1Field, value) != true)) {
                    this.Services1Field = value;
                    this.RaisePropertyChanged("Services1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Suggestion[] Suggestions {
            get {
                return this.SuggestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionsField, value) != true)) {
                    this.SuggestionsField = value;
                    this.RaisePropertyChanged("Suggestions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.UserCategory[] UserCategories {
            get {
                return this.UserCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCategoriesField, value) != true)) {
                    this.UserCategoriesField = value;
                    this.RaisePropertyChanged("UserCategories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.UserDenunce[] UserDenunces {
            get {
                return this.UserDenuncesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDenuncesField, value) != true)) {
                    this.UserDenuncesField = value;
                    this.RaisePropertyChanged("UserDenunces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[] UserFavourites {
            get {
                return this.UserFavouritesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFavouritesField, value) != true)) {
                    this.UserFavouritesField = value;
                    this.RaisePropertyChanged("UserFavourites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[] UserFavourites1 {
            get {
                return this.UserFavourites1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserFavourites1Field, value) != true)) {
                    this.UserFavourites1Field = value;
                    this.RaisePropertyChanged("UserFavourites1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Appointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CoordXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CoordYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MeetingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Proposal ProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProposalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User User1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractorID {
            get {
                return this.ContractorIDField;
            }
            set {
                if ((this.ContractorIDField.Equals(value) != true)) {
                    this.ContractorIDField = value;
                    this.RaisePropertyChanged("ContractorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CoordX {
            get {
                return this.CoordXField;
            }
            set {
                if ((this.CoordXField.Equals(value) != true)) {
                    this.CoordXField = value;
                    this.RaisePropertyChanged("CoordX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CoordY {
            get {
                return this.CoordYField;
            }
            set {
                if ((this.CoordYField.Equals(value) != true)) {
                    this.CoordYField = value;
                    this.RaisePropertyChanged("CoordY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MeetingTime {
            get {
                return this.MeetingTimeField;
            }
            set {
                if ((this.MeetingTimeField.Equals(value) != true)) {
                    this.MeetingTimeField = value;
                    this.RaisePropertyChanged("MeetingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Proposal Proposal {
            get {
                return this.ProposalField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalField, value) != true)) {
                    this.ProposalField = value;
                    this.RaisePropertyChanged("Proposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProposalId {
            get {
                return this.ProposalIdField;
            }
            set {
                if ((this.ProposalIdField.Equals(value) != true)) {
                    this.ProposalIdField = value;
                    this.RaisePropertyChanged("ProposalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bug", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Bug : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BugTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BugText {
            get {
                return this.BugTextField;
            }
            set {
                if ((object.ReferenceEquals(this.BugTextField, value) != true)) {
                    this.BugTextField = value;
                    this.RaisePropertyChanged("BugText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Task TaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Task Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Message1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Proposal ProposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProposalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User User1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromUserID {
            get {
                return this.FromUserIDField;
            }
            set {
                if ((this.FromUserIDField.Equals(value) != true)) {
                    this.FromUserIDField = value;
                    this.RaisePropertyChanged("FromUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message1 {
            get {
                return this.Message1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Message1Field, value) != true)) {
                    this.Message1Field = value;
                    this.RaisePropertyChanged("Message1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Proposal Proposal {
            get {
                return this.ProposalField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalField, value) != true)) {
                    this.ProposalField = value;
                    this.RaisePropertyChanged("Proposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProposalID {
            get {
                return this.ProposalIDField;
            }
            set {
                if ((this.ProposalIDField.Equals(value) != true)) {
                    this.ProposalIDField = value;
                    this.RaisePropertyChanged("ProposalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserID {
            get {
                return this.ToUserIDField;
            }
            set {
                if ((this.ToUserIDField.Equals(value) != true)) {
                    this.ToUserIDField = value;
                    this.RaisePropertyChanged("ToUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Preference", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Preference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnableNotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShareLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShowContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShowContactNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnableNotifications {
            get {
                return this.EnableNotificationsField;
            }
            set {
                if ((this.EnableNotificationsField.Equals(value) != true)) {
                    this.EnableNotificationsField = value;
                    this.RaisePropertyChanged("EnableNotifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShareLocation {
            get {
                return this.ShareLocationField;
            }
            set {
                if ((this.ShareLocationField.Equals(value) != true)) {
                    this.ShareLocationField = value;
                    this.RaisePropertyChanged("ShareLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShowContactEmail {
            get {
                return this.ShowContactEmailField;
            }
            set {
                if ((this.ShowContactEmailField.Equals(value) != true)) {
                    this.ShowContactEmailField = value;
                    this.RaisePropertyChanged("ShowContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShowContactNumber {
            get {
                return this.ShowContactNumberField;
            }
            set {
                if ((this.ShowContactNumberField.Equals(value) != true)) {
                    this.ShowContactNumberField = value;
                    this.RaisePropertyChanged("ShowContactNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Proposal", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Proposal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] AppointmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AproxDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Message[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ProposedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProposedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User User2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AproxDuration {
            get {
                return this.AproxDurationField;
            }
            set {
                if ((this.AproxDurationField.Equals(value) != true)) {
                    this.AproxDurationField = value;
                    this.RaisePropertyChanged("AproxDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromUserID {
            get {
                return this.FromUserIDField;
            }
            set {
                if ((this.FromUserIDField.Equals(value) != true)) {
                    this.FromUserIDField = value;
                    this.RaisePropertyChanged("FromUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ProposedPrice {
            get {
                return this.ProposedPriceField;
            }
            set {
                if ((this.ProposedPriceField.Equals(value) != true)) {
                    this.ProposedPriceField = value;
                    this.RaisePropertyChanged("ProposedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProposedTime {
            get {
                return this.ProposedTimeField;
            }
            set {
                if ((this.ProposedTimeField.Equals(value) != true)) {
                    this.ProposedTimeField = value;
                    this.RaisePropertyChanged("ProposedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserID {
            get {
                return this.ToUserIDField;
            }
            set {
                if ((this.ToUserIDField.Equals(value) != true)) {
                    this.ToUserIDField = value;
                    this.RaisePropertyChanged("ToUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedByUserID {
            get {
                return this.UpdatedByUserIDField;
            }
            set {
                if ((this.UpdatedByUserIDField.Equals(value) != true)) {
                    this.UpdatedByUserIDField = value;
                    this.RaisePropertyChanged("UpdatedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User2 {
            get {
                return this.User2Field;
            }
            set {
                if ((object.ReferenceEquals(this.User2Field, value) != true)) {
                    this.User2Field = value;
                    this.RaisePropertyChanged("User2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rating", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Rating : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User User1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double rating1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromUserID {
            get {
                return this.FromUserIDField;
            }
            set {
                if ((this.FromUserIDField.Equals(value) != true)) {
                    this.FromUserIDField = value;
                    this.RaisePropertyChanged("FromUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserID {
            get {
                return this.ToUserIDField;
            }
            set {
                if ((this.ToUserIDField.Equals(value) != true)) {
                    this.ToUserIDField = value;
                    this.RaisePropertyChanged("ToUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double rating1 {
            get {
                return this.rating1Field;
            }
            set {
                if ((this.rating1Field.Equals(value) != true)) {
                    this.rating1Field = value;
                    this.RaisePropertyChanged("rating1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Service : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] AppointmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ContractorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoordXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoordYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] ProposalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Rating[] RatingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Task[] TasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User User1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ContractorID {
            get {
                return this.ContractorIDField;
            }
            set {
                if ((this.ContractorIDField.Equals(value) != true)) {
                    this.ContractorIDField = value;
                    this.RaisePropertyChanged("ContractorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoordX {
            get {
                return this.CoordXField;
            }
            set {
                if ((this.CoordXField.Equals(value) != true)) {
                    this.CoordXField = value;
                    this.RaisePropertyChanged("CoordX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoordY {
            get {
                return this.CoordYField;
            }
            set {
                if ((this.CoordYField.Equals(value) != true)) {
                    this.CoordYField = value;
                    this.RaisePropertyChanged("CoordY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostedDate {
            get {
                return this.PostedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PostedDateField, value) != true)) {
                    this.PostedDateField = value;
                    this.RaisePropertyChanged("PostedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] Proposals {
            get {
                return this.ProposalsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalsField, value) != true)) {
                    this.ProposalsField = value;
                    this.RaisePropertyChanged("Proposals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Rating[] Ratings {
            get {
                return this.RatingsField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingsField, value) != true)) {
                    this.RatingsField = value;
                    this.RaisePropertyChanged("Ratings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Task[] Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User1 {
            get {
                return this.User1Field;
            }
            set {
                if ((object.ReferenceEquals(this.User1Field, value) != true)) {
                    this.User1Field = value;
                    this.RaisePropertyChanged("User1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Suggestion", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Suggestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuggestionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuggestionText {
            get {
                return this.SuggestionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestionTextField, value) != true)) {
                    this.SuggestionTextField = value;
                    this.RaisePropertyChanged("SuggestionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCategory", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class UserCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDenunce", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class UserDenunce : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> BlockUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenunceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> BlockUser {
            get {
                return this.BlockUserField;
            }
            set {
                if ((this.BlockUserField.Equals(value) != true)) {
                    this.BlockUserField = value;
                    this.RaisePropertyChanged("BlockUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenunceComment {
            get {
                return this.DenunceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.DenunceCommentField, value) != true)) {
                    this.DenunceCommentField = value;
                    this.RaisePropertyChanged("DenunceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromUserID {
            get {
                return this.FromUserIDField;
            }
            set {
                if ((this.FromUserIDField.Equals(value) != true)) {
                    this.FromUserIDField = value;
                    this.RaisePropertyChanged("FromUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserID {
            get {
                return this.ToUserIDField;
            }
            set {
                if ((this.ToUserIDField.Equals(value) != true)) {
                    this.ToUserIDField = value;
                    this.RaisePropertyChanged("ToUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] AppointmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] ProposalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Task[] TasksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Appointment[] Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Proposal[] Proposals {
            get {
                return this.ProposalsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProposalsField, value) != true)) {
                    this.ProposalsField = value;
                    this.RaisePropertyChanged("Proposals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Task[] Tasks {
            get {
                return this.TasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TasksField, value) != true)) {
                    this.TasksField = value;
                    this.RaisePropertyChanged("Tasks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service[] ServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.UserCategory[] UserCategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.UserCategory[] UserCategories {
            get {
                return this.UserCategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCategoriesField, value) != true)) {
                    this.UserCategoriesField = value;
                    this.RaisePropertyChanged("UserCategories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Service ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MvcContractorShareApplication.ContractorShareServiceReference.Status StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Service Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceID {
            get {
                return this.ServiceIDField;
            }
            set {
                if ((this.ServiceIDField.Equals(value) != true)) {
                    this.ServiceIDField = value;
                    this.RaisePropertyChanged("ServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MvcContractorShareApplication.ContractorShareServiceReference.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resultCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                if ((this.resultCodeField.Equals(value) != true)) {
                    this.resultCodeField = value;
                    this.RaisePropertyChanged("resultCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class JobInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ContractorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoordXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoordYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ContractorID {
            get {
                return this.ContractorIDField;
            }
            set {
                if ((this.ContractorIDField.Equals(value) != true)) {
                    this.ContractorIDField = value;
                    this.RaisePropertyChanged("ContractorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoordX {
            get {
                return this.CoordXField;
            }
            set {
                if ((this.CoordXField.Equals(value) != true)) {
                    this.CoordXField = value;
                    this.RaisePropertyChanged("CoordX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoordY {
            get {
                return this.CoordYField;
            }
            set {
                if ((this.CoordYField.Equals(value) != true)) {
                    this.CoordYField = value;
                    this.RaisePropertyChanged("CoordY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostedDate {
            get {
                return this.PostedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.PostedDateField, value) != true)) {
                    this.PostedDateField = value;
                    this.RaisePropertyChanged("PostedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class CommentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProposalInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class ProposalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AproxDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromUsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProposalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ProposedPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProposedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AproxDuration {
            get {
                return this.AproxDurationField;
            }
            set {
                if ((this.AproxDurationField.Equals(value) != true)) {
                    this.AproxDurationField = value;
                    this.RaisePropertyChanged("AproxDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromUserId {
            get {
                return this.FromUserIdField;
            }
            set {
                if ((this.FromUserIdField.Equals(value) != true)) {
                    this.FromUserIdField = value;
                    this.RaisePropertyChanged("FromUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromUsername {
            get {
                return this.FromUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.FromUsernameField, value) != true)) {
                    this.FromUsernameField = value;
                    this.RaisePropertyChanged("FromUsername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobName {
            get {
                return this.JobNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNameField, value) != true)) {
                    this.JobNameField = value;
                    this.RaisePropertyChanged("JobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProposalId {
            get {
                return this.ProposalIdField;
            }
            set {
                if ((this.ProposalIdField.Equals(value) != true)) {
                    this.ProposalIdField = value;
                    this.RaisePropertyChanged("ProposalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ProposedPrice {
            get {
                return this.ProposedPriceField;
            }
            set {
                if ((this.ProposedPriceField.Equals(value) != true)) {
                    this.ProposedPriceField = value;
                    this.RaisePropertyChanged("ProposedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProposedTime {
            get {
                return this.ProposedTimeField;
            }
            set {
                if ((this.ProposedTimeField.Equals(value) != true)) {
                    this.ProposedTimeField = value;
                    this.RaisePropertyChanged("ProposedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserId {
            get {
                return this.ToUserIdField;
            }
            set {
                if ((this.ToUserIdField.Equals(value) != true)) {
                    this.ToUserIdField = value;
                    this.RaisePropertyChanged("ToUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedByUserId {
            get {
                return this.UpdatedByUserIdField;
            }
            set {
                if ((this.UpdatedByUserIdField.Equals(value) != true)) {
                    this.UpdatedByUserIdField = value;
                    this.RaisePropertyChanged("UpdatedByUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateProposalStatusInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class UpdateProposalStatusInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdatedByUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdatedByUserId {
            get {
                return this.UpdatedByUserIdField;
            }
            set {
                if ((this.UpdatedByUserIdField.Equals(value) != true)) {
                    this.UpdatedByUserIdField = value;
                    this.RaisePropertyChanged("UpdatedByUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class MessageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProposalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromUserId {
            get {
                return this.FromUserIdField;
            }
            set {
                if ((this.FromUserIdField.Equals(value) != true)) {
                    this.FromUserIdField = value;
                    this.RaisePropertyChanged("FromUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProposalId {
            get {
                return this.ProposalIdField;
            }
            set {
                if ((this.ProposalIdField.Equals(value) != true)) {
                    this.ProposalIdField = value;
                    this.RaisePropertyChanged("ProposalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserId {
            get {
                return this.ToUserIdField;
            }
            set {
                if ((this.ToUserIdField.Equals(value) != true)) {
                    this.ToUserIdField = value;
                    this.RaisePropertyChanged("ToUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class AppointmentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AproxDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LocationCoordXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LocationCoordYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MeetingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProposalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppointmentId {
            get {
                return this.AppointmentIdField;
            }
            set {
                if ((this.AppointmentIdField.Equals(value) != true)) {
                    this.AppointmentIdField = value;
                    this.RaisePropertyChanged("AppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AproxDuration {
            get {
                return this.AproxDurationField;
            }
            set {
                if ((this.AproxDurationField.Equals(value) != true)) {
                    this.AproxDurationField = value;
                    this.RaisePropertyChanged("AproxDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractorId {
            get {
                return this.ContractorIdField;
            }
            set {
                if ((this.ContractorIdField.Equals(value) != true)) {
                    this.ContractorIdField = value;
                    this.RaisePropertyChanged("ContractorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((this.JobIdField.Equals(value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LocationCoordX {
            get {
                return this.LocationCoordXField;
            }
            set {
                if ((this.LocationCoordXField.Equals(value) != true)) {
                    this.LocationCoordXField = value;
                    this.RaisePropertyChanged("LocationCoordX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LocationCoordY {
            get {
                return this.LocationCoordYField;
            }
            set {
                if ((this.LocationCoordYField.Equals(value) != true)) {
                    this.LocationCoordYField = value;
                    this.RaisePropertyChanged("LocationCoordY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MeetingTime {
            get {
                return this.MeetingTimeField;
            }
            set {
                if ((this.MeetingTimeField.Equals(value) != true)) {
                    this.MeetingTimeField = value;
                    this.RaisePropertyChanged("MeetingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProposalId {
            get {
                return this.ProposalIdField;
            }
            set {
                if ((this.ProposalIdField.Equals(value) != true)) {
                    this.ProposalIdField = value;
                    this.RaisePropertyChanged("ProposalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInfo", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class TaskInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rate", Namespace="http://schemas.datacontract.org/2004/07/ContractorShareService.Domain")]
    [System.SerializableAttribute()]
    public partial class Rate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToUserId {
            get {
                return this.ToUserIdField;
            }
            set {
                if ((this.ToUserIdField.Equals(value) != true)) {
                    this.ToUserIdField = value;
                    this.RaisePropertyChanged("ToUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContractorShareServiceReference.IContractorShare")]
    public interface IContractorShare {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/Login", ReplyAction="http://tempuri.org/IContractorShare/LoginResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult Login(MvcContractorShareApplication.ContractorShareServiceReference.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/Login", ReplyAction="http://tempuri.org/IContractorShare/LoginResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult> LoginAsync(MvcContractorShareApplication.ContractorShareServiceReference.LoginInfo loginInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/Register", ReplyAction="http://tempuri.org/IContractorShare/RegisterResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult Register(MvcContractorShareApplication.ContractorShareServiceReference.RegisterInfo registerinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/Register", ReplyAction="http://tempuri.org/IContractorShare/RegisterResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult> RegisterAsync(MvcContractorShareApplication.ContractorShareServiceReference.RegisterInfo registerinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ResetPassword", ReplyAction="http://tempuri.org/IContractorShare/ResetPasswordResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordResult ResetPassword(MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordInfo resetpasswordinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ResetPassword", ReplyAction="http://tempuri.org/IContractorShare/ResetPasswordResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordResult> ResetPasswordAsync(MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordInfo resetpasswordinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangePassword", ReplyAction="http://tempuri.org/IContractorShare/ChangePasswordResponse")]
        string ChangePassword(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePasswordInfo changepasswordinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangePassword", ReplyAction="http://tempuri.org/IContractorShare/ChangePasswordResponse")]
        System.Threading.Tasks.Task<string> ChangePasswordAsync(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePasswordInfo changepasswordinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangePreferences", ReplyAction="http://tempuri.org/IContractorShare/ChangePreferencesResponse")]
        string ChangePreferences(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePreferencesInfo changepreferencesinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangePreferences", ReplyAction="http://tempuri.org/IContractorShare/ChangePreferencesResponse")]
        System.Threading.Tasks.Task<string> ChangePreferencesAsync(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePreferencesInfo changepreferencesinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetPreferences", ReplyAction="http://tempuri.org/IContractorShare/GetPreferencesResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.PreferencesResult GetPreferences(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetPreferences", ReplyAction="http://tempuri.org/IContractorShare/GetPreferencesResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.PreferencesResult> GetPreferencesAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/SearchContractors", ReplyAction="http://tempuri.org/IContractorShare/SearchContractorsResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.ContractorInfo[] SearchContractors(int CategoryId, string City, string PostCode, double PricePerHour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/SearchContractors", ReplyAction="http://tempuri.org/IContractorShare/SearchContractorsResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ContractorInfo[]> SearchContractorsAsync(int CategoryId, string City, string PostCode, double PricePerHour);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserAverageRating", ReplyAction="http://tempuri.org/IContractorShare/GetUserAverageRatingResponse")]
        double GetUserAverageRating(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserAverageRating", ReplyAction="http://tempuri.org/IContractorShare/GetUserAverageRatingResponse")]
        System.Threading.Tasks.Task<double> GetUserAverageRatingAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditUserProfile", ReplyAction="http://tempuri.org/IContractorShare/EditUserProfileResponse")]
        string EditUserProfile(string userId, MvcContractorShareApplication.ContractorShareServiceReference.UserInfo userprofile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditUserProfile", ReplyAction="http://tempuri.org/IContractorShare/EditUserProfileResponse")]
        System.Threading.Tasks.Task<string> EditUserProfileAsync(string userId, MvcContractorShareApplication.ContractorShareServiceReference.UserInfo userprofile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserProfile", ReplyAction="http://tempuri.org/IContractorShare/GetUserProfileResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.UserInfo GetUserProfile(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserProfile", ReplyAction="http://tempuri.org/IContractorShare/GetUserProfileResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.UserInfo> GetUserProfileAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddFavourite", ReplyAction="http://tempuri.org/IContractorShare/AddFavouriteResponse")]
        string AddFavourite(string userId, int ToUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddFavourite", ReplyAction="http://tempuri.org/IContractorShare/AddFavouriteResponse")]
        System.Threading.Tasks.Task<string> AddFavouriteAsync(string userId, int ToUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/RemoveFavourite", ReplyAction="http://tempuri.org/IContractorShare/RemoveFavouriteResponse")]
        string RemoveFavourite(string userId, string favouriteUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/RemoveFavourite", ReplyAction="http://tempuri.org/IContractorShare/RemoveFavouriteResponse")]
        System.Threading.Tasks.Task<string> RemoveFavouriteAsync(string userId, string favouriteUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserFavourites", ReplyAction="http://tempuri.org/IContractorShare/GetUserFavouritesResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[] GetUserFavourites(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserFavourites", ReplyAction="http://tempuri.org/IContractorShare/GetUserFavouritesResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[]> GetUserFavouritesAsync(string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/UserIsFavourite", ReplyAction="http://tempuri.org/IContractorShare/UserIsFavouriteResponse")]
        bool UserIsFavourite(string fromuserId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/UserIsFavourite", ReplyAction="http://tempuri.org/IContractorShare/UserIsFavouriteResponse")]
        System.Threading.Tasks.Task<bool> UserIsFavouriteAsync(string fromuserId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddDenunce", ReplyAction="http://tempuri.org/IContractorShare/AddDenunceResponse")]
        string AddDenunce(string userId, int ToUser, string Comment, bool BlockUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddDenunce", ReplyAction="http://tempuri.org/IContractorShare/AddDenunceResponse")]
        System.Threading.Tasks.Task<string> AddDenunceAsync(string userId, int ToUser, string Comment, bool BlockUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/BlockUser", ReplyAction="http://tempuri.org/IContractorShare/BlockUserResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result BlockUser(string userId, int ToUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/BlockUser", ReplyAction="http://tempuri.org/IContractorShare/BlockUserResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> BlockUserAsync(string userId, int ToUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/UserIsBlocked", ReplyAction="http://tempuri.org/IContractorShare/UserIsBlockedResponse")]
        bool UserIsBlocked(string fromuserId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/UserIsBlocked", ReplyAction="http://tempuri.org/IContractorShare/UserIsBlockedResponse")]
        System.Threading.Tasks.Task<bool> UserIsBlockedAsync(string fromuserId, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CreateServiceRequest", ReplyAction="http://tempuri.org/IContractorShare/CreateServiceRequestResponse")]
        string CreateServiceRequest(MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CreateServiceRequest", ReplyAction="http://tempuri.org/IContractorShare/CreateServiceRequestResponse")]
        System.Threading.Tasks.Task<string> CreateServiceRequestAsync(MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditJob", ReplyAction="http://tempuri.org/IContractorShare/EditJobResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result EditJob(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditJob", ReplyAction="http://tempuri.org/IContractorShare/EditJobResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> EditJobAsync(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetServiceRequest", ReplyAction="http://tempuri.org/IContractorShare/GetServiceRequestResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.JobInfo GetServiceRequest(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetServiceRequest", ReplyAction="http://tempuri.org/IContractorShare/GetServiceRequestResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo> GetServiceRequestAsync(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetMyCurrentServices", ReplyAction="http://tempuri.org/IContractorShare/GetMyCurrentServicesResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetMyCurrentServices(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetMyCurrentServices", ReplyAction="http://tempuri.org/IContractorShare/GetMyCurrentServicesResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetMyCurrentServicesAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetMyCompletedServices", ReplyAction="http://tempuri.org/IContractorShare/GetMyCompletedServicesResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetMyCompletedServices(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetMyCompletedServices", ReplyAction="http://tempuri.org/IContractorShare/GetMyCompletedServicesResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetMyCompletedServicesAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetOpenServicesAssignedToMe", ReplyAction="http://tempuri.org/IContractorShare/GetOpenServicesAssignedToMeResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetOpenServicesAssignedToMe(int contractorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetOpenServicesAssignedToMe", ReplyAction="http://tempuri.org/IContractorShare/GetOpenServicesAssignedToMeResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetOpenServicesAssignedToMeAsync(int contractorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetClosedServicesAssignedToMe", ReplyAction="http://tempuri.org/IContractorShare/GetClosedServicesAssignedToMeResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetClosedServicesAssignedToMe(int contractorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetClosedServicesAssignedToMe", ReplyAction="http://tempuri.org/IContractorShare/GetClosedServicesAssignedToMeResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetClosedServicesAssignedToMeAsync(int contractorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddJobComment", ReplyAction="http://tempuri.org/IContractorShare/AddJobCommentResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result AddJobComment(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo jobcommentinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddJobComment", ReplyAction="http://tempuri.org/IContractorShare/AddJobCommentResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> AddJobCommentAsync(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo jobcommentinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetJobComments", ReplyAction="http://tempuri.org/IContractorShare/GetJobCommentsResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo[] GetJobComments(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetJobComments", ReplyAction="http://tempuri.org/IContractorShare/GetJobCommentsResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo[]> GetJobCommentsAsync(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/DeleteJobComment", ReplyAction="http://tempuri.org/IContractorShare/DeleteJobCommentResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result DeleteJobComment(string jobId, string jobCommentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/DeleteJobComment", ReplyAction="http://tempuri.org/IContractorShare/DeleteJobCommentResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> DeleteJobCommentAsync(string jobId, string jobCommentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangeServiceStatus", ReplyAction="http://tempuri.org/IContractorShare/ChangeServiceStatusResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result ChangeServiceStatus(string jobId, string statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangeServiceStatus", ReplyAction="http://tempuri.org/IContractorShare/ChangeServiceStatusResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> ChangeServiceStatusAsync(string jobId, string statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/SearchServices", ReplyAction="http://tempuri.org/IContractorShare/SearchServicesResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] SearchServices(int CategoryId, string City, string PostCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/SearchServices", ReplyAction="http://tempuri.org/IContractorShare/SearchServicesResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> SearchServicesAsync(int CategoryId, string City, string PostCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetServiceRate", ReplyAction="http://tempuri.org/IContractorShare/GetServiceRateResponse")]
        double GetServiceRate(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetServiceRate", ReplyAction="http://tempuri.org/IContractorShare/GetServiceRateResponse")]
        System.Threading.Tasks.Task<double> GetServiceRateAsync(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CreateProposal", ReplyAction="http://tempuri.org/IContractorShare/CreateProposalResponse")]
        string CreateProposal(MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CreateProposal", ReplyAction="http://tempuri.org/IContractorShare/CreateProposalResponse")]
        System.Threading.Tasks.Task<string> CreateProposalAsync(MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetProposal", ReplyAction="http://tempuri.org/IContractorShare/GetProposalResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo GetProposal(string proposalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetProposal", ReplyAction="http://tempuri.org/IContractorShare/GetProposalResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo> GetProposalAsync(string proposalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditProposal", ReplyAction="http://tempuri.org/IContractorShare/EditProposalResponse")]
        string EditProposal(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposalinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditProposal", ReplyAction="http://tempuri.org/IContractorShare/EditProposalResponse")]
        System.Threading.Tasks.Task<string> EditProposalAsync(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposalinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/UpdateProposalStatus", ReplyAction="http://tempuri.org/IContractorShare/UpdateProposalStatusResponse")]
        string UpdateProposalStatus(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.UpdateProposalStatusInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/UpdateProposalStatus", ReplyAction="http://tempuri.org/IContractorShare/UpdateProposalStatusResponse")]
        System.Threading.Tasks.Task<string> UpdateProposalStatusAsync(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.UpdateProposalStatusInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetActiveProposals", ReplyAction="http://tempuri.org/IContractorShare/GetActiveProposalsResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[] GetActiveProposals(string userId, bool includeFromMe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetActiveProposals", ReplyAction="http://tempuri.org/IContractorShare/GetActiveProposalsResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[]> GetActiveProposalsAsync(string userId, bool includeFromMe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetMyClosedProposals", ReplyAction="http://tempuri.org/IContractorShare/GetMyClosedProposalsResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[] GetMyClosedProposals(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetMyClosedProposals", ReplyAction="http://tempuri.org/IContractorShare/GetMyClosedProposalsResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[]> GetMyClosedProposalsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/SendProposalMessage", ReplyAction="http://tempuri.org/IContractorShare/SendProposalMessageResponse")]
        string SendProposalMessage(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo proposalmessageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/SendProposalMessage", ReplyAction="http://tempuri.org/IContractorShare/SendProposalMessageResponse")]
        System.Threading.Tasks.Task<string> SendProposalMessageAsync(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo proposalmessageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetProposalMessages", ReplyAction="http://tempuri.org/IContractorShare/GetProposalMessagesResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo[] GetProposalMessages(string proposalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetProposalMessages", ReplyAction="http://tempuri.org/IContractorShare/GetProposalMessagesResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo[]> GetProposalMessagesAsync(string proposalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/DeleteMessage", ReplyAction="http://tempuri.org/IContractorShare/DeleteMessageResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result DeleteMessage(string proposalId, string MessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/DeleteMessage", ReplyAction="http://tempuri.org/IContractorShare/DeleteMessageResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> DeleteMessageAsync(string proposalId, string MessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetActiveAppointments", ReplyAction="http://tempuri.org/IContractorShare/GetActiveAppointmentsResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[] GetActiveAppointments(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetActiveAppointments", ReplyAction="http://tempuri.org/IContractorShare/GetActiveAppointmentsResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[]> GetActiveAppointmentsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetClosedAppointments", ReplyAction="http://tempuri.org/IContractorShare/GetClosedAppointmentsResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[] GetClosedAppointments(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetClosedAppointments", ReplyAction="http://tempuri.org/IContractorShare/GetClosedAppointmentsResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[]> GetClosedAppointmentsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetAppointment", ReplyAction="http://tempuri.org/IContractorShare/GetAppointmentResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo GetAppointment(string appointmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetAppointment", ReplyAction="http://tempuri.org/IContractorShare/GetAppointmentResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo> GetAppointmentAsync(string appointmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CloseAppointment", ReplyAction="http://tempuri.org/IContractorShare/CloseAppointmentResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result CloseAppointment(string appointmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CloseAppointment", ReplyAction="http://tempuri.org/IContractorShare/CloseAppointmentResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> CloseAppointmentAsync(string appointmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CancelAppointment", ReplyAction="http://tempuri.org/IContractorShare/CancelAppointmentResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result CancelAppointment(string appointmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CancelAppointment", ReplyAction="http://tempuri.org/IContractorShare/CancelAppointmentResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> CancelAppointmentAsync(string appointmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CreateTask", ReplyAction="http://tempuri.org/IContractorShare/CreateTaskResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result CreateTask(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/CreateTask", ReplyAction="http://tempuri.org/IContractorShare/CreateTaskResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> CreateTaskAsync(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditTask", ReplyAction="http://tempuri.org/IContractorShare/EditTaskResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result EditTask(string jobId, string taskId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/EditTask", ReplyAction="http://tempuri.org/IContractorShare/EditTaskResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> EditTaskAsync(string jobId, string taskId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetTask", ReplyAction="http://tempuri.org/IContractorShare/GetTaskResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo GetTask(string jobId, string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetTask", ReplyAction="http://tempuri.org/IContractorShare/GetTaskResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo> GetTaskAsync(string jobId, string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangeTaskStatus", ReplyAction="http://tempuri.org/IContractorShare/ChangeTaskStatusResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result ChangeTaskStatus(string jobId, string taskId, string statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/ChangeTaskStatus", ReplyAction="http://tempuri.org/IContractorShare/ChangeTaskStatusResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> ChangeTaskStatusAsync(string jobId, string taskId, string statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/DeleteTask", ReplyAction="http://tempuri.org/IContractorShare/DeleteTaskResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Result DeleteTask(string jobId, string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/DeleteTask", ReplyAction="http://tempuri.org/IContractorShare/DeleteTaskResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> DeleteTaskAsync(string jobId, string taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetJobTasks", ReplyAction="http://tempuri.org/IContractorShare/GetJobTasksResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo[] GetJobTasks(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetJobTasks", ReplyAction="http://tempuri.org/IContractorShare/GetJobTasksResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo[]> GetJobTasksAsync(string jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddRating", ReplyAction="http://tempuri.org/IContractorShare/AddRatingResponse")]
        string AddRating(string userId, int ToUser, int service, string title, string comment, float rate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/AddRating", ReplyAction="http://tempuri.org/IContractorShare/AddRatingResponse")]
        System.Threading.Tasks.Task<string> AddRatingAsync(string userId, int ToUser, int service, string title, string comment, float rate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserRates", ReplyAction="http://tempuri.org/IContractorShare/GetUserRatesResponse")]
        MvcContractorShareApplication.ContractorShareServiceReference.Rate[] GetUserRates(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorShare/GetUserRates", ReplyAction="http://tempuri.org/IContractorShare/GetUserRatesResponse")]
        System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Rate[]> GetUserRatesAsync(string userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContractorShareChannel : MvcContractorShareApplication.ContractorShareServiceReference.IContractorShare, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractorShareClient : System.ServiceModel.ClientBase<MvcContractorShareApplication.ContractorShareServiceReference.IContractorShare>, MvcContractorShareApplication.ContractorShareServiceReference.IContractorShare {
        
        public ContractorShareClient() {
        }
        
        public ContractorShareClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContractorShareClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractorShareClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractorShareClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult Login(MvcContractorShareApplication.ContractorShareServiceReference.LoginInfo loginInfo) {
            return base.Channel.Login(loginInfo);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult> LoginAsync(MvcContractorShareApplication.ContractorShareServiceReference.LoginInfo loginInfo) {
            return base.Channel.LoginAsync(loginInfo);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult Register(MvcContractorShareApplication.ContractorShareServiceReference.RegisterInfo registerinfo) {
            return base.Channel.Register(registerinfo);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AuthenticationResult> RegisterAsync(MvcContractorShareApplication.ContractorShareServiceReference.RegisterInfo registerinfo) {
            return base.Channel.RegisterAsync(registerinfo);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordResult ResetPassword(MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordInfo resetpasswordinfo) {
            return base.Channel.ResetPassword(resetpasswordinfo);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordResult> ResetPasswordAsync(MvcContractorShareApplication.ContractorShareServiceReference.ResetPasswordInfo resetpasswordinfo) {
            return base.Channel.ResetPasswordAsync(resetpasswordinfo);
        }
        
        public string ChangePassword(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePasswordInfo changepasswordinfo) {
            return base.Channel.ChangePassword(userId, changepasswordinfo);
        }
        
        public System.Threading.Tasks.Task<string> ChangePasswordAsync(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePasswordInfo changepasswordinfo) {
            return base.Channel.ChangePasswordAsync(userId, changepasswordinfo);
        }
        
        public string ChangePreferences(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePreferencesInfo changepreferencesinfo) {
            return base.Channel.ChangePreferences(userId, changepreferencesinfo);
        }
        
        public System.Threading.Tasks.Task<string> ChangePreferencesAsync(string userId, MvcContractorShareApplication.ContractorShareServiceReference.ChangePreferencesInfo changepreferencesinfo) {
            return base.Channel.ChangePreferencesAsync(userId, changepreferencesinfo);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.PreferencesResult GetPreferences(string userId) {
            return base.Channel.GetPreferences(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.PreferencesResult> GetPreferencesAsync(string userId) {
            return base.Channel.GetPreferencesAsync(userId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.ContractorInfo[] SearchContractors(int CategoryId, string City, string PostCode, double PricePerHour) {
            return base.Channel.SearchContractors(CategoryId, City, PostCode, PricePerHour);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ContractorInfo[]> SearchContractorsAsync(int CategoryId, string City, string PostCode, double PricePerHour) {
            return base.Channel.SearchContractorsAsync(CategoryId, City, PostCode, PricePerHour);
        }
        
        public double GetUserAverageRating(string UserID) {
            return base.Channel.GetUserAverageRating(UserID);
        }
        
        public System.Threading.Tasks.Task<double> GetUserAverageRatingAsync(string UserID) {
            return base.Channel.GetUserAverageRatingAsync(UserID);
        }
        
        public string EditUserProfile(string userId, MvcContractorShareApplication.ContractorShareServiceReference.UserInfo userprofile) {
            return base.Channel.EditUserProfile(userId, userprofile);
        }
        
        public System.Threading.Tasks.Task<string> EditUserProfileAsync(string userId, MvcContractorShareApplication.ContractorShareServiceReference.UserInfo userprofile) {
            return base.Channel.EditUserProfileAsync(userId, userprofile);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.UserInfo GetUserProfile(string userId) {
            return base.Channel.GetUserProfile(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.UserInfo> GetUserProfileAsync(string userId) {
            return base.Channel.GetUserProfileAsync(userId);
        }
        
        public string AddFavourite(string userId, int ToUser) {
            return base.Channel.AddFavourite(userId, ToUser);
        }
        
        public System.Threading.Tasks.Task<string> AddFavouriteAsync(string userId, int ToUser) {
            return base.Channel.AddFavouriteAsync(userId, ToUser);
        }
        
        public string RemoveFavourite(string userId, string favouriteUserId) {
            return base.Channel.RemoveFavourite(userId, favouriteUserId);
        }
        
        public System.Threading.Tasks.Task<string> RemoveFavouriteAsync(string userId, string favouriteUserId) {
            return base.Channel.RemoveFavouriteAsync(userId, favouriteUserId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[] GetUserFavourites(string userID) {
            return base.Channel.GetUserFavourites(userID);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.UserFavourite[]> GetUserFavouritesAsync(string userID) {
            return base.Channel.GetUserFavouritesAsync(userID);
        }
        
        public bool UserIsFavourite(string fromuserId, string userId) {
            return base.Channel.UserIsFavourite(fromuserId, userId);
        }
        
        public System.Threading.Tasks.Task<bool> UserIsFavouriteAsync(string fromuserId, string userId) {
            return base.Channel.UserIsFavouriteAsync(fromuserId, userId);
        }
        
        public string AddDenunce(string userId, int ToUser, string Comment, bool BlockUser) {
            return base.Channel.AddDenunce(userId, ToUser, Comment, BlockUser);
        }
        
        public System.Threading.Tasks.Task<string> AddDenunceAsync(string userId, int ToUser, string Comment, bool BlockUser) {
            return base.Channel.AddDenunceAsync(userId, ToUser, Comment, BlockUser);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result BlockUser(string userId, int ToUser) {
            return base.Channel.BlockUser(userId, ToUser);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> BlockUserAsync(string userId, int ToUser) {
            return base.Channel.BlockUserAsync(userId, ToUser);
        }
        
        public bool UserIsBlocked(string fromuserId, string userId) {
            return base.Channel.UserIsBlocked(fromuserId, userId);
        }
        
        public System.Threading.Tasks.Task<bool> UserIsBlockedAsync(string fromuserId, string userId) {
            return base.Channel.UserIsBlockedAsync(fromuserId, userId);
        }
        
        public string CreateServiceRequest(MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest) {
            return base.Channel.CreateServiceRequest(jobRequest);
        }
        
        public System.Threading.Tasks.Task<string> CreateServiceRequestAsync(MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest) {
            return base.Channel.CreateServiceRequestAsync(jobRequest);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result EditJob(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest) {
            return base.Channel.EditJob(jobId, jobRequest);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> EditJobAsync(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.JobInfo jobRequest) {
            return base.Channel.EditJobAsync(jobId, jobRequest);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.JobInfo GetServiceRequest(string jobId) {
            return base.Channel.GetServiceRequest(jobId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo> GetServiceRequestAsync(string jobId) {
            return base.Channel.GetServiceRequestAsync(jobId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetMyCurrentServices(string userId) {
            return base.Channel.GetMyCurrentServices(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetMyCurrentServicesAsync(string userId) {
            return base.Channel.GetMyCurrentServicesAsync(userId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetMyCompletedServices(string userId) {
            return base.Channel.GetMyCompletedServices(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetMyCompletedServicesAsync(string userId) {
            return base.Channel.GetMyCompletedServicesAsync(userId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetOpenServicesAssignedToMe(int contractorId) {
            return base.Channel.GetOpenServicesAssignedToMe(contractorId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetOpenServicesAssignedToMeAsync(int contractorId) {
            return base.Channel.GetOpenServicesAssignedToMeAsync(contractorId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] GetClosedServicesAssignedToMe(int contractorId) {
            return base.Channel.GetClosedServicesAssignedToMe(contractorId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> GetClosedServicesAssignedToMeAsync(int contractorId) {
            return base.Channel.GetClosedServicesAssignedToMeAsync(contractorId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result AddJobComment(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo jobcommentinfo) {
            return base.Channel.AddJobComment(jobId, jobcommentinfo);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> AddJobCommentAsync(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo jobcommentinfo) {
            return base.Channel.AddJobCommentAsync(jobId, jobcommentinfo);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo[] GetJobComments(string jobId) {
            return base.Channel.GetJobComments(jobId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.CommentInfo[]> GetJobCommentsAsync(string jobId) {
            return base.Channel.GetJobCommentsAsync(jobId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result DeleteJobComment(string jobId, string jobCommentId) {
            return base.Channel.DeleteJobComment(jobId, jobCommentId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> DeleteJobCommentAsync(string jobId, string jobCommentId) {
            return base.Channel.DeleteJobCommentAsync(jobId, jobCommentId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result ChangeServiceStatus(string jobId, string statusId) {
            return base.Channel.ChangeServiceStatus(jobId, statusId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> ChangeServiceStatusAsync(string jobId, string statusId) {
            return base.Channel.ChangeServiceStatusAsync(jobId, statusId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[] SearchServices(int CategoryId, string City, string PostCode) {
            return base.Channel.SearchServices(CategoryId, City, PostCode);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.JobInfo[]> SearchServicesAsync(int CategoryId, string City, string PostCode) {
            return base.Channel.SearchServicesAsync(CategoryId, City, PostCode);
        }
        
        public double GetServiceRate(string jobId) {
            return base.Channel.GetServiceRate(jobId);
        }
        
        public System.Threading.Tasks.Task<double> GetServiceRateAsync(string jobId) {
            return base.Channel.GetServiceRateAsync(jobId);
        }
        
        public string CreateProposal(MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposal) {
            return base.Channel.CreateProposal(proposal);
        }
        
        public System.Threading.Tasks.Task<string> CreateProposalAsync(MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposal) {
            return base.Channel.CreateProposalAsync(proposal);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo GetProposal(string proposalId) {
            return base.Channel.GetProposal(proposalId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo> GetProposalAsync(string proposalId) {
            return base.Channel.GetProposalAsync(proposalId);
        }
        
        public string EditProposal(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposalinfo) {
            return base.Channel.EditProposal(proposalId, proposalinfo);
        }
        
        public System.Threading.Tasks.Task<string> EditProposalAsync(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo proposalinfo) {
            return base.Channel.EditProposalAsync(proposalId, proposalinfo);
        }
        
        public string UpdateProposalStatus(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.UpdateProposalStatusInfo info) {
            return base.Channel.UpdateProposalStatus(proposalId, info);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProposalStatusAsync(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.UpdateProposalStatusInfo info) {
            return base.Channel.UpdateProposalStatusAsync(proposalId, info);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[] GetActiveProposals(string userId, bool includeFromMe) {
            return base.Channel.GetActiveProposals(userId, includeFromMe);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[]> GetActiveProposalsAsync(string userId, bool includeFromMe) {
            return base.Channel.GetActiveProposalsAsync(userId, includeFromMe);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[] GetMyClosedProposals(string userId) {
            return base.Channel.GetMyClosedProposals(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.ProposalInfo[]> GetMyClosedProposalsAsync(string userId) {
            return base.Channel.GetMyClosedProposalsAsync(userId);
        }
        
        public string SendProposalMessage(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo proposalmessageInfo) {
            return base.Channel.SendProposalMessage(proposalId, proposalmessageInfo);
        }
        
        public System.Threading.Tasks.Task<string> SendProposalMessageAsync(string proposalId, MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo proposalmessageInfo) {
            return base.Channel.SendProposalMessageAsync(proposalId, proposalmessageInfo);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo[] GetProposalMessages(string proposalId) {
            return base.Channel.GetProposalMessages(proposalId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.MessageInfo[]> GetProposalMessagesAsync(string proposalId) {
            return base.Channel.GetProposalMessagesAsync(proposalId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result DeleteMessage(string proposalId, string MessageId) {
            return base.Channel.DeleteMessage(proposalId, MessageId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> DeleteMessageAsync(string proposalId, string MessageId) {
            return base.Channel.DeleteMessageAsync(proposalId, MessageId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[] GetActiveAppointments(string userId) {
            return base.Channel.GetActiveAppointments(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[]> GetActiveAppointmentsAsync(string userId) {
            return base.Channel.GetActiveAppointmentsAsync(userId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[] GetClosedAppointments(string userId) {
            return base.Channel.GetClosedAppointments(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo[]> GetClosedAppointmentsAsync(string userId) {
            return base.Channel.GetClosedAppointmentsAsync(userId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo GetAppointment(string appointmentId) {
            return base.Channel.GetAppointment(appointmentId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.AppointmentInfo> GetAppointmentAsync(string appointmentId) {
            return base.Channel.GetAppointmentAsync(appointmentId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result CloseAppointment(string appointmentId) {
            return base.Channel.CloseAppointment(appointmentId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> CloseAppointmentAsync(string appointmentId) {
            return base.Channel.CloseAppointmentAsync(appointmentId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result CancelAppointment(string appointmentId) {
            return base.Channel.CancelAppointment(appointmentId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> CancelAppointmentAsync(string appointmentId) {
            return base.Channel.CancelAppointmentAsync(appointmentId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result CreateTask(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo) {
            return base.Channel.CreateTask(jobId, taskinfo);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> CreateTaskAsync(string jobId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo) {
            return base.Channel.CreateTaskAsync(jobId, taskinfo);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result EditTask(string jobId, string taskId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo) {
            return base.Channel.EditTask(jobId, taskId, taskinfo);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> EditTaskAsync(string jobId, string taskId, MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo taskinfo) {
            return base.Channel.EditTaskAsync(jobId, taskId, taskinfo);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo GetTask(string jobId, string taskId) {
            return base.Channel.GetTask(jobId, taskId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo> GetTaskAsync(string jobId, string taskId) {
            return base.Channel.GetTaskAsync(jobId, taskId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result ChangeTaskStatus(string jobId, string taskId, string statusId) {
            return base.Channel.ChangeTaskStatus(jobId, taskId, statusId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> ChangeTaskStatusAsync(string jobId, string taskId, string statusId) {
            return base.Channel.ChangeTaskStatusAsync(jobId, taskId, statusId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Result DeleteTask(string jobId, string taskId) {
            return base.Channel.DeleteTask(jobId, taskId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Result> DeleteTaskAsync(string jobId, string taskId) {
            return base.Channel.DeleteTaskAsync(jobId, taskId);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo[] GetJobTasks(string jobId) {
            return base.Channel.GetJobTasks(jobId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.TaskInfo[]> GetJobTasksAsync(string jobId) {
            return base.Channel.GetJobTasksAsync(jobId);
        }
        
        public string AddRating(string userId, int ToUser, int service, string title, string comment, float rate) {
            return base.Channel.AddRating(userId, ToUser, service, title, comment, rate);
        }
        
        public System.Threading.Tasks.Task<string> AddRatingAsync(string userId, int ToUser, int service, string title, string comment, float rate) {
            return base.Channel.AddRatingAsync(userId, ToUser, service, title, comment, rate);
        }
        
        public MvcContractorShareApplication.ContractorShareServiceReference.Rate[] GetUserRates(string userId) {
            return base.Channel.GetUserRates(userId);
        }
        
        public System.Threading.Tasks.Task<MvcContractorShareApplication.ContractorShareServiceReference.Rate[]> GetUserRatesAsync(string userId) {
            return base.Channel.GetUserRatesAsync(userId);
        }
    }
}
